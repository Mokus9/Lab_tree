let angle;
let slider;
let zoom = 1;
let zoomFactor = 1.1;
let maxDepth = 1; // Максимальная глубина рекурсии

function setup() {
  createCanvas(800, 600);
  angleMode(DEGREES);
  
  // Создаем слайдер для изменения угла ветвления
  slider = createSlider(0, 180, 45);
  slider.position(20, 20);
  slider.style('width', '200px');
  
  // Добавляем текстовое пояснение
  textSize(16);
  fill(255);
  noStroke();
}

function draw() {
  background(30);
  
  // Отображаем текущий угол
  fill(255);
  text("Угол ветвления: " + slider.value() + "°", 20, 50);
  text("Масштаб: " + zoom.toFixed(2) + "x", 20, 80);
  text("Глубина рекурсии: " + maxDepth, 20, 110);
  
  // Применяем масштабирование
  translate(width / 2, height);
  scale(zoom);
  
  // Настраиваем параметры для отрисовки фрактала
  stroke(255);
  strokeWeight(2 / zoom);
  
  // Вызываем функцию для отрисовки фрактала
  branch(150, 0);
}

function branch(len, depth) {
  // Отрисовываем линию
  line(0, 0, 0, -len);
  translate(0, -len);
  
  // Условие остановки рекурсии
  if (depth < maxDepth) {
    // Сохраняем текущее состояние системы координат
    push();
    
    // Поворачиваем влево и рисуем ветвь
    rotate(-slider.value());
    branch(len * 0.67, depth + 1);
    
    // Возвращаемся к сохраненному состоянию
    pop();
    
    // Поворачиваем вправо и рисуем ветвь
    push();
    rotate(slider.value());
    branch(len * 0.67, depth + 1);
    pop();
  }
}

// Обработка колеса мыши для масштабирования
function mouseWheel(event) {
  if (event.delta < 0) {
    // Увеличение масштаба
    zoom *= zoomFactor;
  } else {
    // Уменьшение масштаба
    zoom /= zoomFactor;
  }
  // Ограничиваем масштаб
  zoom = constrain(zoom, 0.1, 10);
  return false;
}

// Увеличение глубины рекурсии при клике
function mousePressed() {
  if (maxDepth < 30) { // Ограничиваем максимальную глубину
    maxDepth += 1;
  }
}
